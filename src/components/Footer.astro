---
import Container from '@components/Container.astro';
import Link from '@components/Link.astro';
import { SITE, SOCIALS } from '@consts';
import SeparatedList from './SeparatedList.astro';
import GithubSvg from './svgs/Github.astro';
import LinkedinSvg from './svgs/Linkedin.astro';
import EnvelopeSvg from './svgs/Envelope.astro';
import MoonSvg from './svgs/Moon.astro';
import DisplaySvg from './svgs/Display.astro';
import BrightnessHigh from './svgs/BrightnessHigh.astro';
import { cn } from '@lib/utils';

const github = SOCIALS.find((SOCIAL) => SOCIAL.NAME === 'Github')!;
const linkedin = SOCIALS.find((SOCIAL) => SOCIAL.NAME === 'Linkedin')!;
---

<footer class={cn('py-10 text-sm text-black/35 dark:text-white/35')}>
  <Container>
    <div class="flex justify-between">
      <div>
        <h3 class="mb-2 font-bold">Extras Bits</h3>
        <ul>
          <li>
            <Link
              href="https://github.com/mitchknife/mitchknife.github.io"
              aria-label="Source Code"
              external
              class="flex items-center gap-2">
              <GithubSvg class="size-[14px]" /> Source Code
            </Link>
          </li>
        </ul>
      </div>
      <div>
        <h3 class="mb-2 font-bold">Hit me up</h3>
        <ul>
          <li>
            <Link
              href={`mailto:${SITE.EMAIL}`}
              aria-label={`Email ${SITE.NAME}`}
              external
              class="flex items-center gap-2">
              <EnvelopeSvg class="size-[14px]" /> Email
            </Link>
          </li>
          <li>
            <Link
              href={github.HREF}
              aria-label={`${SITE.NAME} on ${github.NAME}`}
              external
              class="flex items-center gap-2">
              <GithubSvg class="size-[14px]" /> Github
            </Link>
          </li>
          <li>
            <Link
              href={linkedin.HREF}
              aria-label={`${SITE.NAME} on ${linkedin.NAME}`}
              external
              class="flex items-center gap-2">
              <LinkedinSvg class="size-[14px]" /> Linkedin
            </Link>
          </li>
        </ul>
      </div>
      <div>
        <h3 class="mb-2 font-bold">Theme</h3>
        <ul>
          <li>
            <button
              aria-label="Light theme"
              class="light-theme-btn flex items-center gap-2 transition-colors duration-300 ease-in-out hover:text-black hover:dark:text-white">
              <BrightnessHigh class="size-[14px]" /> Light
            </button>
          </li>
          <li>
            <button
              aria-label="Dark theme"
              class="dark-theme-btn flex items-center gap-2 transition-colors duration-300 ease-in-out hover:text-black hover:dark:text-white">
              <MoonSvg class="size-[14px]" /> Dark
            </button>
          </li>
          <li>
            <button
              aria-label="System theme"
              class="system-theme-btn flex items-center gap-2 transition-colors duration-300 ease-in-out hover:text-black hover:dark:text-white">
              <DisplaySvg class="size-[14px]" /> System
            </button>
          </li>
        </ul>
      </div>
    </div>

    <div class="mt-10 text-center">
      <SeparatedList values={['Â© 2025', 'Mitch Rosenburg']} separator=" | " />
    </div>
  </Container>
</footer>
<div
  id="floating-footer"
  class={cn(
    'animate py-3 text-sm text-black/35 dark:text-white/35',
    'fixed left-0 right-0 bottom-0 z-50',
    'bg-stone-200/25 dark:bg-stone-900/25',
    'saturate-200 backdrop-blur-sm'
  )}>
  <Container>
    <div class="flex items-center justify-evenly">
      <div class="flex justify-center gap-4">
        <Link href={`mailto:${SITE.EMAIL}`} aria-label={`Email ${SITE.NAME}`} external>
          <EnvelopeSvg class="size-[18px]" />
        </Link>
        <Link href={github.HREF} aria-label={`${SITE.NAME} on ${github.NAME}`} external>
          <GithubSvg class="size-[18px]" />
        </Link>
        <Link href={linkedin.HREF} aria-label={`${SITE.NAME} on ${linkedin.NAME}`} external>
          <LinkedinSvg class="size-[18px]" />
        </Link>
      </div>

      <div class="flex justify-end gap-4">
        <button
          aria-label="Light theme"
          class="light-theme-btn transition-colors duration-300 ease-in-out hover:text-black hover:dark:text-white">
          <BrightnessHigh class="size-[18px]" />
        </button>
        <button
          aria-label="Dark theme"
          class="dark-theme-btn transition-colors duration-300 ease-in-out hover:text-black hover:dark:text-white">
          <MoonSvg class="size-[18px]" />
        </button>
        <button
          aria-label="System theme"
          class="system-theme-btn transition-colors duration-300 ease-in-out hover:text-black hover:dark:text-white">
          <DisplaySvg class="size-[18px]" />
        </button>
      </div>
    </div>
  </Container>
</div>
<script is:inline>
  (() => {
    function init() {
      const footer = document.querySelector('footer');
      const footerHeight = footer.getBoundingClientRect().height;

      const floatingFooter = document.getElementById('floating-footer');
      const floatingFooterHeight = floatingFooter.getBoundingClientRect().height;

      function adjustFloatingFooter() {
        const { scrollTop, scrollHeight, clientHeight } = document.documentElement;
        if (scrollHeight - clientHeight - scrollTop > footerHeight) {
          floatingFooter.style.bottom = `0px`;
        } else {
          floatingFooter.style.bottom = `-${floatingFooterHeight}px`;
        }
      }

      applyTheme();
      adjustFloatingFooter();

      document.querySelectorAll('.light-theme-btn').forEach((btn) => {
        btn.addEventListener('click', () => applyTheme('light'));
      });

      document.querySelectorAll('.dark-theme-btn').forEach((btn) => {
        btn.addEventListener('click', () => applyTheme('dark'));
      });

      document.querySelectorAll('.system-theme-btn').forEach((btn) => {
        btn.addEventListener('click', () => applyTheme('system'));
      });

      document.addEventListener('scroll', adjustFloatingFooter, { passive: true });
      window.addEventListener('resize', adjustFloatingFooter, { passive: true });

      return () => {
        document.removeEventListener('scroll', adjustFloatingFooter);
        window.removeEventListener('resize', adjustFloatingFooter);
      };
    }

    let theme = null;
    function applyTheme(themeToApply) {
      theme = themeToApply;
      if (!theme) {
        theme = localStorage.getItem('theme') ?? 'system';
      } else {
        localStorage.setItem('theme', theme);
      }

      const css = document.createElement('style');

      css.appendChild(
        document.createTextNode(
          `* {
             -webkit-transition: none !important;
             -moz-transition: none !important;
             -o-transition: none !important;
             -ms-transition: none !important;
             transition: none !important;
          }
        `
        )
      );

      document.head.appendChild(css);

      if (
        theme === 'dark' ||
        (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }

      window.getComputedStyle(css).opacity;
      document.head.removeChild(css);
    }

    applyTheme();

    let teardown = null;
    document.addEventListener('astro:page-load', () => {
      teardown = init();
    });

    document.addEventListener('astro:before-swap', () => {
      teardown?.();
    });
  })();
</script>
