---
import '../styles/global.css';
import '@fontsource/inter/latin-400.css';
import '@fontsource/inter/latin-600.css';
import '@fontsource/lora/400.css';
import '@fontsource/lora/600.css';
import inter400 from '@fontsource/inter/files/inter-latin-400-normal.woff2';
import inter600 from '@fontsource/inter/files/inter-latin-600-normal.woff2';
import lora400 from '@fontsource/lora/files/lora-latin-400-normal.woff2';
import lora600 from '@fontsource/lora/files/lora-latin-600-normal.woff2';
import firaCode400 from '@fontsource/fira-code/files/fira-code-latin-400-normal.woff2';
import firaCode600 from '@fontsource/fira-code/files/fira-code-latin-600-normal.woff2';
import { ClientRouter } from 'astro:transitions';

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/MitchLinocut.png' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href={inter400} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={inter600} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={lora400} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={lora600} as="font" type="font/woff2" crossorigin />
<link href={firaCode400} as="font" type="font/woff2" crossorigin />
<link href={firaCode600} as="font" type="font/woff2" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<ClientRouter />

<script>
  import type { TransitionBeforeSwapEvent } from 'astro:transitions/client';
  document.addEventListener('astro:before-swap', (e) =>
    [
      ...(e as TransitionBeforeSwapEvent).newDocument.head.querySelectorAll('link[as="font"]'),
    ].forEach((link) => link.remove())
  );
</script>

<script is:inline>
  function init() {
    onScroll();
    animate();

    const backToTop = document.getElementById('back-to-top');
    backToTop?.addEventListener('click', (event) => scrollToTop(event));

    const backToPrev = document.getElementById('back-to-prev');
    backToPrev?.addEventListener('click', () => window.history.back());

    document.addEventListener('scroll', onScroll);
  }

  function animate() {
    const animateElements = document.querySelectorAll('.animate');

    animateElements.forEach((element, index) => {
      setTimeout(() => {
        element.classList.add('show');
      }, index * 150);
    });
  }

  function onScroll() {
    if (window.scrollY > 200) {
      document.documentElement.classList.add('scrolled');
    } else {
      document.documentElement.classList.remove('scrolled');
    }
  }

  function scrollToTop(event) {
    event.preventDefault();
    window.scrollTo({
      top: 0,
      behavior: 'smooth',
    });
  }

  document.addEventListener('DOMContentLoaded', () => init());
  document.addEventListener('astro:after-swap', () => init());
</script>
